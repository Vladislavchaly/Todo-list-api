{
    "openapi": "3.0.0",
    "info": {
        "title": "TODO list API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "operationId": "9feca5c91b8caf45fc0e893fe50247bd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "description": "Logout the currently authenticated user",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "boolean",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with the provided credentials",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "tesSSt@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Test1234"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Test1234"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Test User Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/task/": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "description": "Create a new task",
                "operationId": "createTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "parentId": {
                                        "description": "ID of the parent task (if any)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "priority": {
                                        "description": "Priority of the task min 1 max 5",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "title": {
                                        "description": "Title of the task",
                                        "type": "string",
                                        "example": "Test Title"
                                    },
                                    "description": {
                                        "description": "Description of the task",
                                        "type": "string",
                                        "example": "Test Description"
                                    },
                                    "completedAt": {
                                        "description": "Date and time of completion (optional)",
                                        "type": "string",
                                        "example": "2023-08-14 10:18:05"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the created task",
                                            "type": "integer",
                                            "example": 9
                                        },
                                        "title": {
                                            "description": "Title of the task",
                                            "type": "string",
                                            "example": "Test Title"
                                        },
                                        "status": {
                                            "description": "Status of the task",
                                            "type": "string",
                                            "example": "todo"
                                        },
                                        "priority": {
                                            "description": "Priority of the task",
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "description": "Date and time of creation",
                                            "type": "string",
                                            "example": "2023-08-15T07:32:04.000000Z"
                                        },
                                        "sub_tasks": {
                                            "description": "Array of sub-tasks",
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a task by ID",
                "description": "Retrieve a task by its ID.",
                "operationId": "getTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a single task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "priority": {
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "sub_tasks": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Bearer token is missing or invalid"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task by ID",
                "description": "Update a task by its ID.",
                "operationId": "updateTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "parentId": {
                                        "type": "integer"
                                    },
                                    "priority": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "completedAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with updated task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Bearer token is missing or invalid"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task by ID",
                "description": "Delete a task by its ID.",
                "operationId": "deleteTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response indicating task deletion"
                    },
                    "401": {
                        "description": "Unauthorized: Bearer token is missing or invalid"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get list of tasks",
                "description": "Retrieve a list of tasks with optional filters and pagination.",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the task (nullable, valid values: 'todo', 'done')",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "todo",
                                "done"
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "priority_from",
                        "in": "query",
                        "description": "Minimum priority value (nullable, integer)",
                        "schema": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    {
                        "name": "priority_to",
                        "in": "query",
                        "description": "Maximum priority value (nullable, integer, must be greater than or equal to 'priority_from')",
                        "schema": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of the task (nullable, string)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by (nullable, valid values: 'created_at', 'due_date', 'priority')",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "due_date",
                                "priority"
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (nullable, integer)",
                        "schema": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page (nullable, integer)",
                        "schema": {
                            "type": "integer",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with list of tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Bearer token is missing or invalid"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/task/status/{id}": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update the status of a task by ID",
                "description": "Update the status of a task by its ID.",
                "operationId": "updateTaskStatusById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "todo",
                                            "done"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with updated task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Bearer token is missing or invalid"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Auth user",
                "description": "Returns user by your Authorization token",
                "operationId": "getAuthUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "id",
                                            "example": "3"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "test@test.com"
                                        },
                                        "email_verified_at": {
                                            "type": "string",
                                            "example": "2022-01-13 15:54:1"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2022-01-13 15:54:1"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2022-01-13 15:54:1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key_security_example": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Task": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sub_task": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    }
                },
                "type": "object"
            }
        }
    }
}